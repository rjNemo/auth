// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package db

import (
	"net/netip"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type LoginEvent struct {
	ID        uuid.UUID          `json:"id"`
	UserID    pgtype.UUID        `json:"user_id"`
	Provider  pgtype.Text        `json:"provider"`
	Success   bool               `json:"success"`
	Ip        *netip.Addr        `json:"ip"`
	UserAgent pgtype.Text        `json:"user_agent"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
}

type User struct {
	ID          uuid.UUID          `json:"id"`
	Email       string             `json:"email"`
	DisplayName pgtype.Text        `json:"display_name"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
}

type UserOauthAccount struct {
	ID            uuid.UUID          `json:"id"`
	UserID        uuid.UUID          `json:"user_id"`
	Provider      string             `json:"provider"`
	Subject       string             `json:"subject"`
	Email         pgtype.Text        `json:"email"`
	EmailVerified bool               `json:"email_verified"`
	Profile       []byte             `json:"profile"`
	CreatedAt     pgtype.Timestamptz `json:"created_at"`
	UpdatedAt     pgtype.Timestamptz `json:"updated_at"`
}

type UserPassword struct {
	UserID       uuid.UUID          `json:"user_id"`
	PasswordHash []byte             `json:"password_hash"`
	PasswordSalt []byte             `json:"password_salt"`
	Algorithm    string             `json:"algorithm"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `json:"updated_at"`
}
